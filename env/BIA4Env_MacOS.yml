# Reference BIA4 Development Environment in Conda.
# YU Zhejian based on Prof. Romano's `requirements.txt`.
# CONDA USERS: Use `conda env create -f [THIS FILE]`
# MAMBA USERS: `mamba env create -f [THIS FILE]`
# MICROMAMBA USERS: `micromamba create -f [THIS FILE]`
# WARNING: This environment is optimized for Intel CPU.
# WARNING: This environment assumes presence of NVidia GPU. See comments for details.
# WARNING: This environment contains YU Zhejian's preference over acceleration and test libraries.
# WARNING: This environment is HUGE. This means it may consume lots of time to resolve dependencies by Conda,
# WARNING: and may take your IDE (pycharm, etc.) a long time to parse the environment.
# Version 1
name: BIA4Env
channels:
  - nodefaults
#  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forge
#  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/pytorch
#  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main
#  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free
  - conda-forge
  - anaconda
  - bioconda
  - main
  - free
  - pytorch

dependencies:
  # Core libraries
  - python=3.8
  - matplotlib>=3.5
  - pyqt=5
  - numpy=1.23
  - pandas=1.5

  # general-purposed Image Processing Libraries
  - scikit-image=0.19

  # ML Libs
  - scikit-learn=1.1
  - pytorch>=1.13
  - torchvision

  # Recommended libraries
  - seaborn=0.12 # A high-level plotting library over matplotlib.
  - joblib=1.2 # An easy-to-use parallel helper.
  - tqdm=4.64 # Progress bar.
  - click # For CLI applications
  - prettytable # For formatting tables
  - tomli # For fast parsing of TOML files
  - tomli-w # For fast writing of TOML files

  # Development Utilities
  - bash
  - make
  - coreutils
  - findutils
  - git
  - grep

  # Jupyter Notebook Related
  - ipython
  - notebook
  - jupyter
  - jupytext

  # Sphinx documentation
  - sphinx=5.3
  - sphinx_rtd_theme=1.0.0
  - sphinx-copybutton
  - myst-nb

  # Pandas acceleration libraries
  - bottleneck>=1.3.1
  - numexpr>=2.8
  - numba>=0.53

  # Testing
  - pytest=7.2
  - pytest-cov=4.0
  - pytest-html=3.1
  - coverage=6.5

  # Gradient Boosting Trees
  - py-xgboost>=0.90

  - pip
  - setuptools
  - wheel
  - build
